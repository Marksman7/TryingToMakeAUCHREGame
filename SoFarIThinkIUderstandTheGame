//Help from https://stackoverflow.com/questions/3473438/return-array-in-a-function = forgot how to pass an array in return on a method

#include <iostream>
#include <string>
#include <cstdlib>
#include <time.h>

#include<vector>





int* shufflinIt()
{

    int Deck[24] = { 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46 };

    int ShuffleDeck[24] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };


    int Randy = 0;

    for (int i = 0; i < 23; i++)
    {
        
        bool Next = false;


        while (Next == false)
        {
            Randy = rand() % 24;
            int Cout = 0;

            for (int e = 0; e < 24; e++)
            {
                if (ShuffleDeck[e] != Deck[Randy])
                {
                    Cout = Cout + 1;
                }
            }

            if (Cout >= 24)
            {
                Next = true;
                ShuffleDeck[i] = Deck[Randy];

                std::cout << ShuffleDeck[i] << std::endl;
            }

        }

    }
   // std::cout << "ok" << std::endl;
    return ShuffleDeck;
}

int playerChoice(int Middle[4], int PlayerHand[5], int Trump)
{
    int HeadCard = 0;



    for (int i = 0; i < 5; i++)
    {

        if (PlayerHand[i] != 0)
        {

            if ((PlayerHand[i] - (PlayerHand[i] % 10)) / 10 == Trump)
            {

                if (HeadCard == 0)
                {
                    HeadCard = PlayerHand[i];
                }

                for (int q = 0; q < 4; q++)
                {
                    int Top = 0;

                    if ((Middle[q] % 10) <= (PlayerHand[i] % 10))
                    {

                        Top = Top + 1;
                    }

                    if (Top == 4)
                    {
                        HeadCard = PlayerHand[i];
                    }
                }

            }
            else
            {

                if (HeadCard == 0)
                {
                    HeadCard = PlayerHand[i];
                }

                for (int q = 0; q < 4; q++)
                {
                    int Top = 0;

                    if ((Middle[q] % 10) <= (PlayerHand[i] % 10))
                    {

                        Top = Top + 1;
                    }

                    if (Top == 4)
                    {
                        HeadCard = PlayerHand[i];
                    }
                }


            }


        }
    }

    int Over;

    for (int w = 0; w < 5; w++)
    {
        if (HeadCard == PlayerHand[w])
        {
            PlayerHand[w] = 0;
            Over = w;
        }
    }

    return HeadCard, Over;
}

int main()
{
    srand((unsigned int)time(NULL));
    
    //std::string Dimond[6] = { "Nine", "Ten", "Jack", "Qween", "King", "Ace"};

    //std::string Heart[6] = { "Nine", "Ten", "Jack", "Qween", "King", "Ace" };

    //std::string Spade[6] = { "Nine", "Ten", "Jack", "Qween", "King", "Ace" };

   // std::string Clove[6] = { "Nine", "Ten", "Jack", "Qween", "King", "Ace" };

    //4=Clove 1=Spade 2=Heart 3=Dimond
    //0 = 9 1= 10 2= jack =3 qween =4 king = 4 ace = 5
    std::string names[6] = { "Nine", "Ten", "Jack", "Qween", "King", "Ace" };

    int Trump = 0;

    int OkTrump = 0;

    //int Deck[24] = { 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46 };

    //int ShuffleDeck[24] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

    int RedOne[5] = { 0, 0, 0, 0, 0 };

    int RedTwo[5] = { 0, 0, 0, 0, 0 };

    int BlueOne[5] = { 0, 0, 0, 0, 0 };

    int BlueTwo[5] = { 0, 0, 0, 0, 0 };

    int cardsMiddle[4] = {0,0,0,0};
    
    int That; //thenumber being returned

    int Ladder = 0; //counts up to the last card

    //shuffle Deck
    int *TShuffleDeck = shufflinIt();

    /*
    int Randy = 0;

    for (int i = 0; i < 24; i++)
    {

        bool Next = false;


        while (Next == false)
        {
            Randy = rand() % 25;
            int Cout = 0;

            for (int e = 0; e < 24; e++)
            {
                if (ShuffleDeck[e] != Deck[Randy])
                {
                    Cout = Cout + 1;
                }
            }

            if (Cout >= 24)
            {
                Next = true;
                ShuffleDeck[i] = Deck[Randy];

                std::cout << ShuffleDeck[i] << std::endl;
            }

        }

    }
    std::cout << "Here" << std::endl;*/
    for (int a = 0; a < 5; a++)
    {
        RedOne[a] = TShuffleDeck[Ladder];
        Ladder = Ladder + 1;
        BlueOne[a] = TShuffleDeck[Ladder];
        Ladder = Ladder + 1;
        RedTwo[a] = TShuffleDeck[Ladder];
        Ladder = Ladder + 1;
        BlueTwo[a] = TShuffleDeck[Ladder];
        Ladder = Ladder + 1;
    }

    Trump = (TShuffleDeck[Ladder] - (TShuffleDeck[Ladder] % 10)) / 10;

    std::cout << "RedOne" << std::endl;
    for (int s = 0; s < 5; s++)
    {
        std::cout << RedOne[s] << std::endl;
    }
    std::cout << "BlueOne" << std::endl;
    for (int s = 0; s < 5; s++)
    {
        std::cout << BlueOne[s] << std::endl;
    }
    std::cout << "RedTwo" << std::endl;
    for (int s = 0; s < 5; s++)
    {
        std::cout << RedTwo[s] << std::endl;
    }
    std::cout << "BlueTwo" << std::endl;
    for (int s = 0; s < 5; s++)
    {
        std::cout << BlueTwo[s] << std::endl;
    }


    std::cout << Trump << std::endl;

    //cardsMiddle[0], That = playerChoice(cardsMiddle, RedOne, Trump);

    //RedOne[That] = 0;


    std::cout << "End!\n" << std::endl;
}

